# Common Errors:
# - Provisioning/Gathering -> `sudo echo hi`
#   (fails with sudo: a password is required)
# - Provisioning/Register SSH -> API token expired
#   (fails with a 401)
# - Configure/Gathering -> `rm ~/.ssh/known_hosts`
#   (fails with remote host identification changed)
# - Configure/Gathering -> just run again
#   (fails with UNREACHABLE)
---
- name: Provision Digital Ocean Ressources
  become: true
  hosts: localhost
  vars:
    oauth_token: "{{ lookup('ansible.builtin.file', '.digital-ocean-token') }}"
    domain: hsnipe.moe
  tasks:

    - name: Register SSH Public Key
      community.digitalocean.digital_ocean_sshkey:
        name: "Github Token"
        oauth_token: "{{ oauth_token }}"
        ssh_pub_key: "{{ lookup('ansible.builtin.file', '~/.ssh/digital-ocean.pub') }}"
        state: present
      register: sshkey_result

    - name: Create Droplets
      community.digitalocean.digital_ocean_droplet:
        state: present
        oauth_token: "{{ oauth_token }}"
        name: "{{ item }}"
        size: s-1vcpu-2gb # https://slugs.do-api.dev/
        region: fra1
        image: debian-12-x64
        unique_name: true
        ssh_keys: ["{{ sshkey_result.data.ssh_key.id }}"]
      with_inventory_hostnames:
        - digitalocean
      register: droplet_result

    - name: Create Domains
      community.digitalocean.digital_ocean_domain:
        state: present
        oauth_token: "{{ oauth_token }}"
        name: "{{ domain }}"
        ip: "{{ item.data.droplet.networks.v4.0.ip_address }}"
        project: rapture
      with_items: "{{ droplet_result.results }}"

    - name: Create CNAME DNS Records
      community.digitalocean.digital_ocean_domain_record:
        state: present
        oauth_token: "{{ oauth_token }}"
        domain: "{{ domain }}"
        name: "{{ item }}"
        data: "{{ domain }}"
        type: CNAME
      with_items:
        - status
        - www

    - name: Persist IP address in hostfile
      become: true # Do "sudo echo hi" or sth if you get an error
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item.data.droplet.name }}$'
        line: "{{ item.data.droplet.networks.v4.0.ip_address }} {{ item.data.droplet.name }}"
        state: present
      with_items: "{{ droplet_result.results }}"
