- name: Configure the Droplet
  hosts: all
  become: true
  tasks:

    - name: Create Filesystem on Volume
      community.general.filesystem:
        fstype: ext4
        dev: /dev/sda

    - name: Mount Volume
      ansible.posix.mount:
        path: /mnt
        src: /dev/sda
        opts: noatime
        state: mounted
        fstype: ext4

    - name: Obtain SSL certificate with Certbot
      ansible.builtin.command: certbot --nginx --non-interactive --agree-tos --email port19@port19.xyz --redirect --domain hsnipe.moe
      when: ansible_facts['uptime_seconds'] > 3600

    - name: Import Grafana GPG Key
      ansible.builtin.apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present
      register: apt_result

    - name: Add Grafana Repo
      ansible.builtin.apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present

    - name: Install The Packages
      ansible.builtin.apt:
        pkg:
          - nginx
          - certbot
          - python3-certbot-nginx
          - git
          - ufw
          - docker.io
          - docker-compose
          - prometheus
          - prometheus-node-exporter
          - grafana
          - cadvisor

    - name: Configure Firewall
      community.general.ufw:
        state: enabled
        rule: allow
        port: "{{ item }}"
      loop:
        - 80   # HTTP
        - 443  # HTTPS
        - 22   # SSH

    - name: Sync
      ansible.builtin.meta: noop # ansible-playbook --start-at-task Sync deploy.yml

    - name: Copy all the files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: '0644'
      loop:
        - src: config_files/grafana.ini
          dest: /etc/grafana/grafana.ini
        - src: config_files/grafana-datasources.yml
          dest: /etc/grafana/provisioning/datasources/datasources.yml
        - src: config_files/grafana-dashboard.yml
          dest: /etc/grafana/provisioning/dashboards/dashboard.yml
        - src: config_files/grafana-dashboard.json
          dest: /etc/grafana/provisioning/dashboards/dashboard.json
        - src: config_files/prometheus.yml
          dest: /etc/prometheus/prometheus.yml
        - src: config_files/nginx.conf
          dest: /etc/nginx/nginx.conf
        - src: config_files/docker-compose.yml
          dest: /opt/docker-compose.yml
      register: file_result

    - name: (Re-) Start Services
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: true
        state: restarted
        name: "{{ item }}"
      with_items:
        - nginx
        - prometheus
        - grafana-server

    - name: Docker Compose
      community.docker.docker_compose:
        project_src: /opt
