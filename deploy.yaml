# Common Errors:
# - Provisioning/Gathering -> `sudo echo hi`
#   (fails with sudo: a password is required)
# - Provisioning/Register SSH -> API token expired
#   (fails with a 401)
# - Configure/Gathering -> `rm ~/.ssh/known_hosts`
#   (fails with remote host identification changed)
---
- name: Provisioning
  become: true
  hosts: localhost
  vars:
    oauth_token: "{{ lookup('ansible.builtin.file', 'token') }}"
  tasks:
    - name: "Register SSH Public Key"
      community.digitalocean.digital_ocean_sshkey:
        name: "Github Token"
        oauth_token: "{{ oauth_token }}"
        ssh_pub_key: "{{ lookup('ansible.builtin.file', '~/.ssh/github.pub') }}"
        state: present
      register: sshkey_result
    - name: "Create Droplet"
      community.digitalocean.digital_ocean_droplet:
        state: present
        oauth_token: "{{ oauth_token }}"
        name: "{{ item }}"
        size: s-1vcpu-512mb-10gb
        region: fra1
        image: debian-11-x64
        unique_name: true
        ssh_keys: ["{{ sshkey_result.data.ssh_key.id }}"]
      with_inventory_hostnames:
        - digitalocean
      register: droplet_result
    - name: Persist IP address in hostfile
      become: true # Do "sudo echo hi" or sth if you get an error
      ansible.builtin.lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item.data.droplet.name }}$'
        line: "{{ item.data.droplet.networks.v4.0.ip_address }} {{ item.data.droplet.name }}"
        state: present
      with_items: "{{ droplet_result.results }}"

- name: Configure
  hosts: all
  become: true
  tasks:
    - name: Import Grafana GPG key
      ansible.builtin.apt_key:
        url: https://packages.grafana.com/gpg.key
        state: present

    - name: Add Grafana repo
      ansible.builtin.apt_repository:
        repo: deb https://packages.grafana.com/oss/deb stable main
        state: present

    - name: Install Infra Stack
      ansible.builtin.apt:
        pkg:
          - nginx
          - certbot
          - python3-certbot-nginx
          - git
          - docker.io
          - prometheus
          - prometheus-nginx-exporter
          - prometheus-node-exporter
          - grafana

   # - name: Copy Config Files
   # Setup on demand later

    - name: Start Services
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: true
        state: started
        name: "{{ item }}"
      with_items:
        - nginx
        - docker
        - prometheus-node-exporter
        - prometheus-nginx-exporter
        - prometheus
        - grafana-server
